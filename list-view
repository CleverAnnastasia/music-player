{
  "component": true,
  "usingComponents": {
    "loading": "../loading/loading"
  }
}

<view class="listview-wrapper">
  <scroll-view class="listview"
     scroll-y style="height: 100%"
     bindscroll="scroll"
     scroll-into-view="view{{toView}}">
    <view>
      <view wx:for="{{singerlist}}"
            class="list-group"
            wx:key="{{index}}"
            id="view{{index}}">
        <view class="list-group-title">{{item.title}}</view>
        <view>
          <view wx:for="{{item.items}}" class="list-group-item"
                wx:key="{{index}}"
                data-singer="{{item}}"
                catch:tap="toSingerDetail">
            <image src="{{item.avatar}}" class="avatar"/>
            <text class="name">{{item.name}}</text>
          </view>
        </view>
      </view>
    </view>

    <!--<div class="list-fixed" v-show="fixedTitle" ref="fixed">
      <div class="fixed-title">{{fixedTitle}}</div>
    </div>-->
    <view class="loading-container" wx:if="{{!singerlist.length}}">
      <loading></loading>
    </view>
  </scroll-view>
  <view class="list-shortcut" touchstart-stop-prevent="onShortcutTouchStart"
        touchmove-stop-prevent="onShortcutTouchMove">
    <view>
      <view class="item {{currentIndex==index?'current':''}}" wx:for="{{shortcutList}}" wx:key="{{index}}"
            data-index="{{index}}"
            bindtap="shortcutListTap">
        {{item}}
      </view>
    </view>
  </view>
</view>
.listview-wrapper {
    width: 100%;
    height: 100%;
}
.listview {
    width: 100%;
    height: 100%;
    overflow: hidden;
}
.listview .list-group {
    padding-bottom: 60rpx;
}
.listview .list-group .list-group-title {
    height: 60rpx;
    line-height: 60rpx;
    padding-left: 40rpx;
    font-size: 24rpx;
    color: rgba(255,255,255,0.5);
    background: #333;
}
.listview .list-group .list-group-item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 40rpx 0 0 60rpx;
}
.listview .list-group .list-group-item .avatar {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
}
.listview .list-group .list-group-item .name {
    margin-left: 40rpx;
    color: rgba(255,255,255,0.5);
    font-size: 28rpx;
}
.listview .loading-container {
    position: absolute;
    width: 100%;
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}
.list-shortcut {
    position: fixed;
    z-index: 30;
    right: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    width: 40rpx;
    padding: 40rpx 0;
    border-radius: 20rpx;
    text-align: center;
    background: rgba(0,0,0,0.3);
    font-family: Helvetica;
}
.list-shortcut .item.current {
    color: #ffcd32;
}
.list-shortcut .item {
  padding: 6rpx;
  line-height: 1;
  color: rgba(255,255,255,0.5);
  font-size: 24rpx;
}
Component({
  data: {
    toView: 0,
    currentIndex: 0
  },
  properties: {
    singerlist: {
      type: Array,
      value: [],
      observer: function (newVal, oldVal) {
        let shortcutList = []
        newVal.forEach(function (item) {
          shortcutList.push(item.title.substring(0, 1))
        })
        this.setData({
          shortcutList: shortcutList
        })
        this.getHeight()
      }
    }
  },
  methods: {
    toSingerDetail: function (event) {
      const app = getApp()
      console.log(event.currentTarget.dataset.singer)
      app.globalData.selectsinger = event.currentTarget.dataset.singer
      wx.navigateTo({
        url: '/pages/singer-detail/singer-detail'
      })
    },
    scroll: function (event) {
      const newY = event.detail.scrollTop
      const listHeight = this.data.listHeight
      // 滚动到顶部
      if (newY < 0) {
        this.setData({
          currentIndex: 0
        })
        return
      }
      // 滚到中间部分
      for (let i = 0; i < listHeight.length - 1; i++) {
        let height1 = listHeight[i]
        let height2 = listHeight[i + 1]
        if (newY >= height1 && newY < height2) {
          this.setData({currentIndex: i})
          return
        }
      }
      // 当滚动到底部，且-newY大于最后一个元素的上限
      this.setData({
        currentIndex: listHeight.length - 2
      })
    },
    shortcutListTap: function (event) {
      this.setData({
        toView: event.target.dataset.index,
        currentIndex: event.target.dataset.index
      })
    },
    getHeight: function () {
      const _that = this
      setTimeout(() => {
        wx.createSelectorQuery().in(this).selectAll('.list-group').fields({size: true}, function (res) {
          res.height
        }).exec(function (e) {
          let listHeight = []
          let height = 0
          listHeight.push(height)
          e[0].forEach((item, index) => {
            height += item.height
            listHeight.push(height)
          })
          _that.setData({
            listHeight: listHeight
          })
        })
      }, 20)
    }
  }
})
